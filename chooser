<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ</title>
<style>
  body {
    font-family: sans-serif;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: #f4f4f4; /* Light grey background */
    padding: 20px;
  }

  #exercise-container {
    background-color: #fff; /* White container background */
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    padding: 30px;
    width: 80%; /* Adjust width as needed */
    max-width: 600px; /* Limit maximum width */
  }

  .button {
    padding: 16px 32px;
    font-size: 21px;
    cursor: pointer;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 8px;
    margin-bottom: 20px;
    transition: background-color 0.3s ease; /* Smooth transition */
  }

  .button:hover {
    background-color: #3e8e41; /* Darker green on hover */
  }

  #russian-sentences {
    display: flex;
    flex-direction: column; /* Stack items vertically */
    align-items: center; /* Center items horizontally */
    margin-top: 20px;
  }

  .sentence-button {
    padding: 16px 32px;
    font-size: 21px;
    cursor: pointer;
    background-color: #e0e0e0; /* Light grey for sentence buttons */
    color: #333; /* Dark grey text */
    border: none;
    border-radius: 8px;
    margin: 10px 0; /* Reduced margin to align */
    transition: background-color 0.3s ease;
    width: 80%; /* Adjust width as needed */
    max-width: 400px; /* Limit maximum width for sentence buttons */
    box-sizing: border-box; /* Important for correct sizing with padding */
  }

  .sentence-button:hover {
    background-color: #ccc; /* Slightly darker grey on hover */
  }

   #score {
        font-size: 24px;
        margin-top: 30px;
        font-weight: bold;
    }

  /* Optional: Add some space around the result */
  #result::before,
  #result::after {
    content: " ";
    display: block;
    margin: 5px;
  }

   #score {
        font-size: 24px;
        margin-top: 30px;
        font-weight: bold;
    }
   #score::before {
        content: "üíé"; /* Use the same emoji */
        font-size: 150%; /* 50% larger */
        margin-right: 5px; /* Add some space between emoji and text */
    }
</style>
</head>
<body>

<div id="exercise-container">
  <button class="button" id="speak-button" onclick="speakSentence()">Listen</button>

  <div id="russian-sentences">
    <button class="sentence-button" id="sentence1" onclick="checkAnswer(this)">  </button>
    <button class="sentence-button" id="sentence2" onclick="checkAnswer(this)">  </button>
  </div>

  <div id="result"></div>
   <div id="score"> x 0</div>
</div>


<script>
  const sentences = [
    { english: "I am at school.", correct: "–Ø –≤ —à–∫–æ–ª–µ.", incorrect: "–Ø –≤ —à–∫–æ–ª–µ?" },
    { english: "Is he happy?", correct: "–û–Ω —Å—á–∞—Å—Ç–ª–∏–≤?", incorrect: "–û–Ω —Å—á–∞—Å—Ç–ª–∏–≤." },
    { english: "She is not tired.", correct: "–û–Ω–∞ –Ω–µ —É—Å—Ç–∞–ª–∞.", incorrect: "–û–Ω–∞ —É—Å—Ç–∞–ª–∞."},
    { english: "Are we late?", correct: "–ú—ã –æ–ø–æ–∑–¥–∞–ª–∏?", incorrect: "–ú—ã –æ–ø–æ–∑–¥–∞–ª–∏."},
    { english: "They are at the park.", correct: "–û–Ω–∏ –≤ –ø–∞—Ä–∫–µ.", incorrect: "–û–Ω–∏ –≤ –ø–∞—Ä–∫–µ?" },
    { english: "Is it your bag?", correct: "–≠—Ç–æ —Ç–≤–æ—è —Å—É–º–∫–∞?", incorrect: "–≠—Ç–æ —Ç–≤–æ—è —Å—É–º–∫–∞."},
    { english: "You are not here.", correct: "–¢–µ–±—è –∑–¥–µ—Å—å –Ω–µ—Ç.", incorrect: "–¢—ã –∑–¥–µ—Å—å." },
    { english: "Are they students?", correct: "–û–Ω–∏ —Å—Ç—É–¥–µ–Ω—Ç—ã?", incorrect: "–û–Ω–∏ —Å—Ç—É–¥–µ–Ω—Ç—ã."},
    { english: "He is my friend.", correct: "–û–Ω –º–æ–π –¥—Ä—É–≥.", incorrect: "–û–Ω –º–æ–π –¥—Ä—É–≥?" },
    { english: "Is she at work?", correct: "–û–Ω–∞ –Ω–∞ —Ä–∞–±–æ—Ç–µ?", incorrect: "–û–Ω–∞ –Ω–∞ —Ä–∞–±–æ—Ç–µ."},
    { english: "We are not ready.", correct: "–ú—ã –Ω–µ –≥–æ—Ç–æ–≤—ã.",  incorrect: "–ú—ã –≥–æ—Ç–æ–≤—ã."},
    { english: "Are you at home?", correct: "–¢—ã –¥–æ–º–∞?", incorrect: "–¢—ã –¥–æ–º–∞."},
    { english: "It is not cold.", correct: "–ù–µ —Ö–æ–ª–æ–¥–Ω–æ.", incorrect: "–•–æ–ª–æ–¥–Ω–æ."},
    { english: "Is he in the garden?", correct: "–û–Ω –≤ —Å–∞–¥—É?", incorrect: "–û–Ω –≤ —Å–∞–¥—É."},
    { english: "They are not at school.", correct: "–ò—Ö –Ω–µ—Ç –≤ —à–∫–æ–ª–µ.", incorrect: "–û–Ω–∏ –≤ —à–∫–æ–ª–µ."},
    { english: "Are we friends?", correct: "–ú—ã –¥—Ä—É–∑—å—è?", incorrect: "–ú—ã –¥—Ä—É–∑—å—è."},
    { english: "I am not hungry.", correct: "–Ø –Ω–µ –≥–æ–ª–æ–¥–µ–Ω.", incorrect: "–Ø –≥–æ–ª–æ–¥–µ–Ω."},
    { english: "Is she your sister?", correct: "–û–Ω–∞ —Ç–≤–æ—è —Å–µ—Å—Ç—Ä–∞?", incorrect: "–û–Ω–∞ —Ç–≤–æ—è —Å–µ—Å—Ç—Ä–∞."},
    { english: "You are right.", correct: "–¢—ã –ø—Ä–∞–≤.", incorrect: "–¢—ã –ø—Ä–∞–≤?" },
    { english: "Are they happy?", correct: "–û–Ω–∏ —Å—á–∞—Å—Ç–ª–∏–≤—ã?", incorrect: "–û–Ω–∏ —Å—á–∞—Å—Ç–ª–∏–≤—ã."},
    { english: "He is not at the party.", correct: "–ï–≥–æ –Ω–µ—Ç –Ω–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–µ.", incorrect: "–û–Ω –Ω–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–µ."},
    { english: "Is it raining?", correct: "–ò–¥—ë—Ç –¥–æ–∂–¥—å?", incorrect: "–ò–¥—ë—Ç –¥–æ–∂–¥—å."},
    { english: "We are at the cinema.", correct: "–ú—ã –≤ –∫–∏–Ω–æ.", incorrect: "–ú—ã –≤ –∫–∏–Ω–æ?" },
    { english: "Are you a teacher?", correct: "–¢—ã —É—á–∏—Ç–µ–ª—å?", incorrect: "–¢—ã —É—á–∏—Ç–µ–ª—å."},
    { english: "She is not my friend.", correct: "–û–Ω–∞ –Ω–µ –º–æ—è –ø–æ–¥—Ä—É–≥–∞.", incorrect: "–û–Ω–∞ –º–æ—è –ø–æ–¥—Ä—É–≥–∞."},
    { english: "Is he your brother?", correct: "–û–Ω —Ç–≤–æ–π –±—Ä–∞—Ç?", incorrect: "–û–Ω —Ç–≤–æ–π –±—Ä–∞—Ç."},
    { english: "They are not here.", correct: "–ò—Ö –∑–¥–µ—Å—å –Ω–µ—Ç.", incorrect: "–û–Ω–∏ –∑–¥–µ—Å—å."},
    { english: "Are we late for the meeting?", correct: "–ú—ã –æ–ø–∞–∑–¥—ã–≤–∞–µ–º –Ω–∞ –≤—Å—Ç—Ä–µ—á—É?", incorrect: "–ú—ã –æ–ø–∞–∑–¥—ã–≤–∞–µ–º –Ω–∞ –≤—Å—Ç—Ä–µ—á—É."},
    { english: "I am a student.", correct: "–Ø —Å—Ç—É–¥–µ–Ω—Ç.", incorrect: "–Ø —Å—Ç—É–¥–µ–Ω—Ç?" },
    { english: "Is it your book?", correct: "–≠—Ç–æ —Ç–≤–æ—è –∫–Ω–∏–≥–∞?", incorrect: "–≠—Ç–æ —Ç–≤–æ—è –∫–Ω–∏–≥–∞."},
  ];

  let currentSentenceIndex = 0;
  let speechSynth = null;
  let score = 0;

  function startExercise() {
    currentSentenceIndex = Math.floor(Math.random() * sentences.length);
    speechSynth = window.speechSynthesis;
    loadNextSentence();
  }

  function loadNextSentence() {
    const sentenceData = sentences[currentSentenceIndex];
    const button1 = document.getElementById("sentence1");
    const button2 = document.getElementById("sentence2");

    // Randomize button content
    const isCorrectFirst = Math.random() < 0.5;
    button1.textContent = isCorrectFirst ? sentenceData.correct : sentenceData.incorrect;
    button2.textContent = isCorrectFirst ? sentenceData.incorrect : sentenceData.correct;

    document.getElementById("result").textContent = "";

    if (speechSynth) {
      speakSentence();
    }
  }

  function speakSentence() {
    if (speechSynth && 'speechSynthesis' in window) {
      const sentenceData = sentences[currentSentenceIndex];
      const utterance = new SpeechSynthesisUtterance(sentenceData.english);

      let voices = speechSynth.getVoices();

      if (voices.length === 0) {
        speechSynth.onvoiceschanged = function() {
          voices = speechSynth.getVoices();
          setEnglishVoice(utterance);
          speechSynth.speak(utterance);
        };
      } else {
           setEnglishVoice(utterance);
           speechSynth.speak(utterance);
      }
    } else {
      alert("Web Speech API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.");
    }
  }

  function setEnglishVoice(utterance) {
      let voices = speechSynth.getVoices();
      let englishUSVoice = voices.find(voice => voice.lang === 'en-US');

      if (englishUSVoice) {
          utterance.voice = englishUSVoice;
      } else {
           console.warn("–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –≥–æ–ª–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≥–æ–ª–æ—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.");
      }
  }

  function checkAnswer(button) {
    const selectedSentence = button.textContent;
    const sentenceData = sentences[currentSentenceIndex];
    const resultDiv = document.getElementById('result');

    if (selectedSentence === sentenceData.correct) {
      resultDiv.textContent = "";
      score++;
      updateScoreDisplay();
    } else {
       resultDiv.textContent = "";
    }

    currentSentenceIndex = (currentSentenceIndex + 1) % sentences.length;  // Loop back to the beginning
    setTimeout(loadNextSentence, 1500); // Load next sentence after a short delay
  }

  function updateScoreDisplay() {
      document.getElementById('score').textContent = ` x ${score}`;
  }

  startExercise();
</script>

</body>
</html>
